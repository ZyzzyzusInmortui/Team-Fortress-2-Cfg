alias eureka_tele_spawn "eureka_teleport 0";
alias eureka_tele_build "eureka_teleport 1";
alias build_mouse "unbind MOUSE1; bind MOUSE1 +attack; unbind MOUSE2; bind MOUSE2 +attack2";
alias attack_mouse "unbind MOUSE1; bind MOUSE1 +primary; unbind MOUSE2; bind MOUSE2 +secondary";
alias +sentry "destroy 2; build 2; build_mouse";
alias +dispenser "destroy 0; build 0; build_mouse";
alias +entrance "destroy 1; build 1; build_mouse";
alias +exit "destroy 3; build 3; build_mouse";
alias keys_building "alias key_1 +sentry;  alias key_2 +dispenser; alias key_3 +entrance; alias key_4 +exit";
keys_building;
alias after_sentry "slot1"; //Slot for after building sentry, slot 1 for mini, slot 3 for normal sentry
alias after_default "slot3";
alias -sentry "-attack; attack_mouse; after_sentry";
alias -dispenser "-attack; attack_mouse; after_default";
alias -entrance "-attack; attack_mouse; after_default";
alias -exit "-attack; attack_mouse; after_default";
alias +short_circuit "slot2; +attack2";
alias -short_circuit "slot1; -attack2";

alias +toggle_state "reset_keys; keys_loadout; yes"; 
alias -toggle_state "reset_keys; keys_building; no";
reset_keys; keys_building;

alias crouch_toggle_select crouch_toggle_on;
crouch_toggle_select;
-duck;

autofire;

bind MOUSE1 +primary
bind MOUSE2 +secondary
bind MOUSE3 "+attack2; r_drawviewmodel 1; zoom_out"
bind MWHEELUP slot1
bind MWHEELDOWN slot2
bind CTRL crouch_state
bind SHIFT +toggle_state;
bind Q eureka_tele_spawn
bind E eureka_tele_build
bind R reload;
bind F +melee;
bind X +short_circuit;
bind BACKSPACE "class_config_reset; class_config_engie";
